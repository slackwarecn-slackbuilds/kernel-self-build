#!/bin/sh

# Copyright 2018, MDrights <mdrights@tutanota.de>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -e

PKGNAM=linux
VERSION=${VERSION:-5.10.4}
ARCH=x86_64
BUILD=${BUILD:-1_MD}

CWD=$(pwd)
TMP=${TMP:-/tmp}
SRC=$CWD/${PKGNAM}-${VERSION}
PKG=${TMP}/${PKGNAM}

rm -rf $PKG
mkdir -p $PKG
mkdir -p ${PKG}/boot/
mkdir -p ${PKG}/lib/modules/
mkdir -p ${PKG}/install/

# Unpack the kernel tar ball.
xzcat -cd linux-${VERSION}.tar.xz | tar xvf -

cd $SRC

make mrproper      || echo ">> Error: make mrproper."
# Use the running kernel's config.
# cp /boot/config ./.config
zcat /proc/config.gz > ./.config

# Customize the config:
sed -i '/CONFIG_SECURITY_APPARMOR/s/.*/CONFIG_SECURITY_APPARMOR=y/' .config

# git clone git://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git
# find . -name ".git*" -exec rm -rf "{}" \;

chown -R root:root .

# Compile it. Change the XXXconfig to suit to your need.
make olddefconfig || echo ">> Error: make olddefconfig"
make -j4 || echo ">> Error: make"

echo ">> Making modules installed to $PKG..."
#make modules_install install || exit 1
INSTALL_MOD_PATH=$PKG make modules_install || exit 1

# Copy the output.
cp .config ${PKG}/boot/config-${VERSION}
#cp /boot/vmlinuz ${PKG}/boot/vmlinuz-generic-${VERSION}
cat arch/x86/boot/bzImage > ${PKG}/boot/vmlinuz-generic-${VERSION}
#cp /boot/System.map ${PKG}/boot/System.map-${VERSION} 
cat System.map > ${PKG}/boot/System.map-${VERSION} 

#cp -r /lib/modules/${VERSION} ${PKG}/lib/modules/
cp ${CWD}/doinst.sh ${PKG}/install/

cd -
PKG_SRC=$CWD/linux-source
mkdir -p $PKG_SRC/usr/src/
mv $SRC $PKG_SRC/usr/src/


echo "Packaging kernel and its source code..."
cd $PKG
/sbin/makepkg -l y -c n $TMP/kernel-generic-$VERSION-$ARCH-$BUILD.txz

cd $PKG_SRC
/sbin/makepkg -l y -c n $TMP/kernel-source-$VERSION-$ARCH-$BUILD.txz

# Run the dummy script for modules.
sh ./kernel-modules.SlackBuild

exit
